####################################################################################################
# Run-Time Environment:     R version 3.4.2
# Author:                   Ilse van Beelen, intern CHDR
# Supervisor:               Jeroen van Smeden
# Sponsor:                  none
# Project number:           CHDR1518 
# Script:                   Part 1 (1/5)
# Short title:  		        Effect of different polymorfisms of CYP2D6 in healthy volunteers (HV) 
#                           in relation to PK/PD of metoprolol
# Purpose of script:        Designing a Linear Mixed-Effects Model for the PD (SysBP & DiaBP & HR) 
#                           data of CHDR1518
#                           Note: This model will only look at the effect on SysBP, 
#                           the second and third script (part 2 & 3) will make a model for the 
#                           DiaBP and HR
#
# Datafiles used:			      CHDR1518_Mixed_Model_Data2018-06-11.csv
#                          
# Date:                     2018-05-04
# Version:  		    	      V.1.0					
####################################################################################################
#------------------
#    LIBRARIES
#------------------
library(plyr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(Matrix)
library(lme4)
library(car)
library(lattice)
library(lmerTest)
library(reshape2)
library(influence.ME)
library(emmeans)
library(xtable)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
library(memisc)
#------------------
#    INPUT
#------------------
rm(list = ls(all.names = TRUE))
options(warn = 1) 

df_data = read.table(file =  '../Data/DataForGraphs/CHDR1518_Mixed_Model_Data2018-06-11.csv', 
                     sep = ',', header = T)



#--------------------
#     Demographics
#-------------------
df_data$Gender = as.factor(df_data$Gender)
boxplot_bmi = plot(boxplot(BMI ~ Gender, data = df_data, ylab = 'BMI', xlab = "Gender", 
                      main = 'Distribution of BMI over males (0) & females (1)'))

df_demo = select(df_data, Dia_bp, Sys_bp, HR, BMI, Age, Gender, Cyp_meta)

plot_density_demo = ggplot(melt(df_demo), aes(x = value)) + 
  facet_wrap(~ variable, scales = "free", ncol = 2) + 
  geom_density() 

plot(plot_density_demo)


### Save demographics ###
png('../Plots/Demographics/CHDR1518_Boxplot_BMI_Gender.png', width = 15, height = 7, units='in',res=600)
print(boxplot_bmi)
dev.off()

png('../Plots/Demographics/CHDR1518_Densityplot_Demographics.png', width = 15, height = 7, units='in',res=600)
print(plot_density_demo)
dev.off()








###### Settings data plots #########
theme = theme(panel.background = element_rect(fill = "lightgrey", colour = "white", size = 4),
              axis.text=element_text(size=20),
              axis.title=element_text(size=22),
              plot.title = element_text(size = 22),
              strip.text = element_text(size = 20),
              legend.position="bottom",
              legend.text=element_text(size=20),
              legend.title=element_blank())   

# Change levels gender
levels(df_data$Gender) = c('male',"female")
df_data$SubjectNr = as.factor(df_data$SubjectNr)

#--------------------
#     RAW DATA PLOTS
#-------------------
# Visualize Effect of treatment in PD endpoints


# Visualize Sys BP
p1a = ggplot(data = df_data, aes(x = TADH, y= Sys_bp, col=Treatment))  +
  geom_point(aes(shape = Treatment), size = 4, alpha = 0.7) +
  geom_line(aes(group = SubjectNr)) +
  #ggtitle("Raw data: Systolic Blood pressure over time after administration of Metoprolol or placebo") + 
  ylab("Systolic Bloodpressure(mmHg)") + 
  xlab("Time after dosing (hours)") +
  ylim(80,140) + xlim(-0.65,6)

p1a = p1a + facet_grid(Occ~Gender) + geom_vline(xintercept = 0, linetype = 'dotted') +
  scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + theme
   
  
plot(p1a)






# Visualize Diastolic BP
# Occasion 1
p2a = ggplot(data = df_data, aes(x = TADH, y= Dia_bp, col=Treatment))  +
  geom_point(aes(shape = Treatment), size = 4, alpha = 0.7) +
  geom_line(aes(group = SubjectNr)) +
  #ggtitle("Raw data: Diastolic Blood pressure over time after administration of Metoprolol or placebo") + 
  ylab("Diastolic Bloodpressure(mmHg)") + 
  xlab("Time after dosing (hours)") +
  ylim(40,90) + xlim(-0.65,6)

p2a = p2a + facet_grid(Occ~Gender) + scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p2a)






# Visualize HR
p3a = ggplot(data = df_data, aes(x = TADH, y= HR, col=Treatment))  +
  geom_point(aes(shape = Treatment), size = 4, alpha = 0.7) +
  geom_line(aes(group = SubjectNr)) +
  #ggtitle("Raw data Day1: Heart Rate over time after administration of Metoprolol or placebo") + 
  ylab("Heart Rate (bpm)") + 
  xlab("Time after dosing (hours)") +
  ylim(25,125) + xlim(-0.65,6)

p3a = p3a + facet_grid(Occ~Gender) + 
  scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p3a)



# Visualize Respiratory rate
p4a = ggplot(data = df_data, aes(x = TADH, y= Respiratory_rate, col=Treatment))  +
  geom_point(aes(shape = Treatment), size = 4, alpha = 0.7) +
  geom_line(aes(group = SubjectNr)) +
  #ggtitle("Raw data: Respiratory rate over time after administration of Metoprolol or placebo") + 
  ylab("Respiratory rate (per min)") + 
  xlab("Time after dosing (hours)") +
  ylim(5,30) + xlim(-0.65,6)

p4a = p4a + facet_grid(Occ~Gender) + scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p4a)






### Save plots ###
png('../Plots/RawGraphs/CHDR1518_RawOutput_SysBP.png', width = 15, height = 7, units = 'in', res = 600)
plot(p1a)
dev.off()

png('../Plots/RawGraphs/CHDR1518_RawOutput_DiaBP.png', width = 15, height = 7, units='in', res = 600)
plot(p2a)
dev.off()

png('../Plots/RawGraphs/CHDR1518_RawOutput_HeartRate.png', width = 15, height = 7, units='in', res = 600)
plot(p3a)
dev.off()

png('../Plots/Rawgraphs/CHDR1518_RawOutput_RepiratoryRate.png', width = 15, height = 7, units='in', res = 600)
plot(p4a)
dev.off()



#-------------------------
#    SUMMARISE DATA
#-------------------------
# Systolic BP
# Remove variables that are not needed
df_sysbp = dplyr::select(df_data, SubjectNr, TADH, Sys_bp, Treatment, Gender)
df_sysbp = melt(data = df_sysbp, id.vars=c("SubjectNr", "Treatment", "Gender", "TADH"))

# Summarise Systolic BP data based on time after dosing in hours (tadh), 
# Treatment (placebo/metoprolol) & gender (male/female)
df_summ_sysbp = data.frame(ddply(df_sysbp, c("TADH", "Treatment","Gender", "variable"), summarise,
                                 Mean = round(mean(value), digits = 2),
                                 SD = round(sd(value), digits = 2),
                                 SEM = round(sd(value)/sqrt(length(value)), digits = 2),
                                 LowerQuantile = round(quantile(value, probs = 0.025), digits=2),
                                 UpperQuantile = round(quantile(value, probs = 0.975), digits = 2),
                                 N = length(value)))




# Diastolic BP
# Remove variables that are not needed
df_diabp = select(df_data, SubjectNr, TADH, Dia_bp, Treatment, Gender)
df_diabp = melt(data = df_diabp, id.vars=c("SubjectNr", "Treatment", "Gender", "TADH"))

# Summarise Diatolic BP data based on time after dosing in hours (tadh), 
# Treatment (placebo/metoprolol) & gender (male/female)
df_summ_diabp = data.frame(ddply(df_diabp, c("TADH", "Treatment","Gender", "variable"), summarise,
                                 Mean = round(mean(value), digits = 2),
                                 SD = round(sd(value), digits = 2),
                                 SEM = round(sd(value)/sqrt(length(value)), digits = 2),
                                 LowerQuantile = round(quantile(value, probs = 0.025), digits=2),
                                 UpperQuantile = round(quantile(value, probs = 0.975), digits = 2),
                                 N = length(value)))



# Heart Rate (HR)
# Remove variables that are not needed
df_hr = select(df_data, SubjectNr, TADH, HR, Treatment, Gender)
df_hr = melt(data = df_hr, id.vars=c("SubjectNr", "Treatment", "Gender", "TADH"))

# Summarise Diatolic BP data based on time after dosing in hours (tadh), 
# Treatment (placebo/metoprolol) & gender (male/female)
df_summ_hr = data.frame(ddply(df_hr, c("TADH", "Treatment","Gender", "variable"), summarise,
                                 Mean = round(mean(value), digits = 2),
                                 SD = round(sd(value), digits = 2),
                                 SEM = round(sd(value)/sqrt(length(value)), digits = 2),
                                 LowerQuantile = round(quantile(value, probs = 0.025), digits=2),
                                 UpperQuantile = round(quantile(value, probs = 0.975), digits = 2),
                                 N = length(value)))




# Respiratory rate (resp)
# Remove variables that are not needed
df_resp = select(df_data, SubjectNr, TADH, Respiratory_rate, Treatment, Gender)
df_resp = melt(data = df_resp, id.vars=c("SubjectNr", "Treatment", "Gender", "TADH"))

# Summarise Diatolic BP data based on time after dosing in hours (tadh), 
# Treatment (placebo/metoprolol) & gender (male/female)
df_summ_resp = data.frame(ddply(df_resp, c("TADH", "Treatment","Gender", "variable"), summarise,
                              Mean = round(mean(value), digits = 2),
                              SD = round(sd(value), digits = 2),
                              SEM = round(sd(value)/sqrt(length(value)), digits = 2),
                              LowerQuantile = round(quantile(value, probs = 0.025), digits=2),
                              UpperQuantile = round(quantile(value, probs = 0.975), digits = 2),
                              N = length(value)))



### Save summary tables ###
write.table(df_summ_diabp, file = paste("../Data/DataForGraphs/CHDR1518_SummaryStats_DiaBP",Sys.Date(), 
                                        ".csv", sep = ""), 
            row.names=FALSE, na = "", col.names=T, sep=",")
write.table(df_summ_sysbp, file = paste("../Data/DataForGraphs/CHDR1518_SummaryStats_SysBP",Sys.Date(), 
                                        ".csv", sep = ""), 
            row.names=FALSE, na = "", col.names=T, sep=",")
write.table(df_summ_hr, file = paste("../Data/DataForGraphs/CHDR1518_SummaryStats_HeartRate",Sys.Date(), 
                                     ".csv", sep = ""), 
            row.names=FALSE, na = "", col.names=T, sep=",")

write.table(df_summ_resp, file = paste("../Data/DataForGraphs/CHDR1518_SummaryStats_RespiratoryRate",Sys.Date(), 
                                     ".csv", sep = ""), 
            row.names=FALSE, na = "", col.names=T, sep=",")




############## Summary Stats SEM ###################
pd <- position_dodge(0.1) # position dodge for error bars

# Summary Stats Sys BP with Standard Error Mean
p3 = ggplot(data = df_summ_sysbp, aes(x = TADH, y= Mean, col=Treatment))  +
  geom_point(position = pd, aes(shape = Treatment), size = 4) +
  geom_line(position = pd) +
  geom_errorbar(position = pd, aes(ymin = Mean - SEM, ymax = Mean + SEM, x = TADH, col = Treatment), 
                alpha = 1, width = 0.3) +
  #ggtitle("Mean Systolic BP and Standard Error over time after administration of Metoprolol or placebo") + 
  ylab("Bloodpressure(mmHg)") + 
  xlab("Time after dosing (hours)") +
  ylim(100,140) + xlim(-0.9,6.2)

p3 = p3 + facet_wrap(~Gender) + scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p3)



# Summary Stats Dia BP with Standard Error Mean
p4 = ggplot(data = df_summ_diabp, aes(x = TADH, y= Mean, col=Treatment))  +
  geom_point(position = pd, aes(shape = Treatment), size = 4) +
  geom_line(position = pd) +
  geom_errorbar(position = pd, aes(ymin = Mean - SEM, ymax = Mean + SEM, x = TADH, col = Treatment), 
                alpha = 1, width = 0.3) +
  #ggtitle("Mean Diastolic BP and Standard Error over time after administration of Metoprolol or placebo") + 
  ylab("Bloodpressure(mmHg)") + 
  xlab("Time after dosing (hours)") +
  ylim(40,90) + xlim(-0.9,6.2)

p4 = p4 + facet_wrap(~Gender) + scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p4)


# Summary Stats HR with Standard Error Mean
p4a = ggplot(data = df_summ_hr, aes(x = TADH, y= Mean, col=Treatment))  +
  geom_point(position = pd, aes(shape = Treatment), size = 4) +
  geom_line(position = pd) +
  geom_errorbar(position = pd, aes(ymin = Mean - SEM, ymax = Mean + SEM, x = TADH, col = Treatment), 
                alpha = 1, width = 0.3) +
  #ggtitle("Mean Heart Rate and Standard Error over time after administration of Metoprolol or placebo") + 
  ylab("Heart Rate (bpm)") + 
  xlab("Time after dosing (hours)") +
  ylim(25,125) + xlim(-0.9,6.2)

p4a = p4a + facet_wrap(~Gender) + scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p4a)



# Summary Stats Respiratory rate with Standard Error Mean
p4b = ggplot(data = df_summ_resp, aes(x = TADH, y= Mean, col=Treatment))  +
  geom_point(position = pd, aes(shape = Treatment), size = 4) +
  geom_line(position = pd) +
  geom_errorbar(position = pd, aes(ymin = Mean - SEM, ymax = Mean + SEM, x = TADH, col = Treatment), 
                alpha = 1, width = 0.3) +
  #ggtitle("Mean Heart Rate and Standard Error over time after administration of Metoprolol or placebo") + 
  ylab("Respiratory rate (per min)") + 
  xlab("Time after dosing (hours)") +
  ylim(10,25) + xlim(-0.9,6.2)

p4b = p4b + facet_wrap(~Gender) + scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p4b)





############ Summary Stats SD #################
# Summary Stats Sys BP with Standard Deviation
p5 = ggplot(data = df_summ_sysbp, aes(x = TADH, y= Mean, col=Treatment))  +
  geom_point(position = pd, aes(shape = Treatment), size = 4) +
  geom_line(position = pd) +
  geom_errorbar(position = pd, aes(ymin = Mean - SD, ymax = Mean + SD, x = TADH, col = Treatment), 
                alpha = 1, width = 0.3) +
  #ggtitle("Mean Systolic BP and Standard Deviation over time after administration of Metoprolol or placebo") + 
  ylab("Bloodpressure(mmHg)") + 
  xlab("Time after dosing (hours)") +
  ylim(80,140) + xlim(-0.9,6.2)

p5 = p5 + facet_wrap(~Gender) + scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p5)





# Summary Stats Dia BP with Standard Deviation
p6 = ggplot(data = df_summ_diabp, aes(x = TADH, y= Mean, col=Treatment))  +
  geom_point(position = pd, aes(shape = Treatment), size = 4) +
  geom_line(position = pd) +
  geom_errorbar(position = pd, aes(ymin = Mean - SD, ymax = Mean + SD, x = TADH, col = Treatment), 
                alpha = 1, width = 0.3) +
  #ggtitle("Mean Diastolic BP and Standard Deviation over time after administration of Metoprolol or placebo") + 
  ylab("Bloodpressure(mmHg)") + 
  xlab("Time after dosing (hours)") +
  ylim(40,90) + xlim(-0.9,6.2)

p6 = p6 + facet_wrap(~Gender) + scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p6)


# Summary Stats HR with Standard Deviation
p6a = ggplot(data = df_summ_hr, aes(x = TADH, y= Mean, col=Treatment))  +
  geom_point(position = pd, aes(shape = Treatment), size = 4) +
  geom_line(position = pd) +
  geom_errorbar(position = pd, aes(ymin = Mean - SD, ymax = Mean + SD, x = TADH, col = Treatment), 
                alpha = 1, width = 0.3) +
  ggtitle("Mean Heart Rate and Standard Deviation over time after administration of Metoprolol or placebo") + 
  ylab("Heart Rate (bpm)") + 
  xlab("Time after dosing (hours)") +
  ylim(25,125) + xlim(-0.9,6.2)

p6a = p6a + facet_wrap(~Gender) + scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p6a)



# Summary Stats Respiratory rate with Standard Deviation
p6b = ggplot(data = df_summ_resp, aes(x = TADH, y= Mean, col=Treatment))  +
  geom_point(position = pd, aes(shape = Treatment), size = 4) +
  geom_line(position = pd) +
  geom_errorbar(position = pd, aes(ymin = Mean - SD, ymax = Mean + SD, x = TADH, col = Treatment), 
                alpha = 1, width = 0.3) +
  ggtitle("Mean Heart Rate and Standard Deviation over time after administration of Metoprolol or placebo") + 
  ylab("Respiratory rate (per min)") + 
  xlab("Time after dosing (hours)") +
  ylim(10,25) + xlim(-0.9,6.2)

p6b = p6b + facet_wrap(~Gender) + scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme
plot(p6b)




## Save summary stats plots ###
png('../Plots/SummaryStats/CHDR1518_SummaryStats_SysBP_StandardError.png', width = 15, height = 7, 
    units = 'in', res = 600)
plot(p3)
dev.off()

png('../Plots/SummaryStats/CHDR1518_SummaryStats_DiaBP_StandardError.png', width = 15, height = 7, 
    units='in', res = 600)
plot(p4)
dev.off()

png('../Plots/SummaryStats/CHDR1518_SummaryStats_HeartRate_StandardError.png', width = 15, height = 7, 
    units='in', res = 600)
plot(p4a)
dev.off()

png('../Plots/SummaryStats/CHDR1518_SummaryStats_RespiratoryRate_StandardError.png', width = 15, height = 7, 
    units='in', res = 600)
plot(p4b)
dev.off()

png('../Plots/SummaryStats/CHDR1518_SummaryStats_SysBP_StandardDeviation.png', width = 15, height = 7, 
    units = 'in', res = 600)
plot(p5)
dev.off()

png('../Plots/SummaryStats/CHDR1518_SummaryStats_DiaBP_StandardDeviation.png', width = 15, height = 7, 
    units='in', res = 600)
plot(p6)
dev.off()

png('../Plots/SummaryStats/CHDR1518_SummaryStats_HeartRate_StandardDeviation_.png', width = 15, height = 7, 
    units='in', res = 600)
plot(p6a)
dev.off()

png('../Plots/SummaryStats/CHDR1518_SummaryStats_RespiratoryRate_StandardDeviation_.png', width = 15, height = 7, 
    units='in', res = 600)
plot(p6a)
dev.off()




#--------------------
#     BUILDING MODEL
#--------------------
Data = df_data
Data$Occ = as.factor(Data$Occ)
Data$Seq = as.factor(Data$Seq)
Data$Cyp_meta = as.factor(Data$Cyp_meta)
Data$TADH = as.factor(Data$TADH)
Data$Gender = as.factor(Data$Gender)
levels(Data$Gender) = c('male', 'female')

####### Model 1 #########
# Start with minimal model
# The random effect factor "SubjectNr" has an effect on the intercept (1)
# During model selecton use REML = FALSE
Model1 <- lmer(Sys_bp ~ Treatment +TADH + (1|SubjectNr), data = Data, REML = F)
plot(Model1)
summary(Model1)
# Each model needs to be assessed for:
#     1. Homogeneity of variance
#     2. Normal distribution of residuals
#     3. Infuence of outliers


#Homogeneity of variance check
plot(resid(Model1)) # nicely spread out


# Check normal distribution
qqPlot(resid(Model1), id.n = 5) # more spread out in upper quantile (less concentrated points than expected)
resid(Model1)
# rejecting null hypothesis that residuals come from normal distribution, 
# but large amount of datapoints give this outcome quicker
shapiro.test(resid(Model1))  

# Check influence of outliers
infl1 = influence(Model1,obs = T)
cooksd = cooks.distance(infl1) # two outliers, 

# Two outliers found: #111 (SysBP was 130 mmHg 8 minutes after administration) & 
#  #90 (SysBP was 139 mmHg 8 minutes after administration)
plot(cooksd, pch="*", cex=2) + 
abline(h = 4*mean(cooksd, na.rm=T), col="red") +  # add cutoff line
text(x = 1:length(cooksd) , y=cooksd, labels=ifelse(cooksd>4*mean(cooksd), 1:length(cooksd),""), 
     col="blue", pos = 2)


# Export summary from Model1 to LateX table
xtable(coef(summary(Model1)))
xtable(as.data.frame(VarCorr(Model1)))




####### Model2 #########
# Extra interaction added. The effect of time nested within treatment
Model2 = lmer(Sys_bp ~ Treatment + TADH + (Treatment:TADH) + (1|SubjectNr), data = Data, REML = F)
summary(Model2)
plot(Model2)

# Compare two models
anova(Model1, Model2) # Model 2 has better fit

#Homogeneity of variance check
plot(resid(Model1)) # nicely spread out

# Check normal distribution
qqPlot(resid(Model2)) # still less concentrated in upper quantiles
shapiro.test(resid(Model2)) 

# Check for outliers
infl2 = influence(Model2, obs = T)
cooksd = cooks.distance(infl2) # two outliers, 
plot(infl2, which = 'cook', cutoff = 0.04)
plot(infl2, which = 'pchange')
plot(infl2)

# Two outliers found: #111 (SysBP was 130 mmHg 8 minutes after administration) & 
#  #90 (SysBP was 139 mmHg 8 minutes after administration)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x = 1:length(cooksd) , y=cooksd, labels=ifelse(cooksd>0.04, 1:length(cooksd),""), col="blue")


# Export anova table to LateX
xtable(anova(Model1, Model2))



###### Model3 #########
#Extra fixed effect added: Gender
Model3 = lmer(Sys_bp ~ Treatment + TADH + (Treatment:TADH) + Gender + (1|SubjectNr), data = Data, REML = F)
summary(Model3)
plot(Model3)

# Compare Model 3 with Model2
anova(Model2, Model3)

#Homogeneity of variance check
plot(resid(Model3)) # nicely spread out

# Check normal distribution
qqPlot(resid(Model3),id.method = 'y',id.n = 10) # more spread out in upper quantile 
# (less concentrated points than expected)
resid(Model3)
shapiro.test(resid(Model3)) # rejecting null hypothesis that residuals come from normal distribution 

# Check for influence of outliers
infl3 = influence(Model3, obs = T)
cooksd3 = cooks.distance(infl3) # two outliers, 
plot(infl3, which = 'cook', cutoff = 0.04)
plot(infl3, which = 'pchange')
plot(infl3)


plot(cooksd3, pch="*", cex=2, main="Influential Obs by Cooks distance")  # still same outliers detected
abline(h = 4*mean(cooksd3, na.rm=T), col="red")  
text(x = 1:length(cooksd3) , y=cooksd3, labels=ifelse(cooksd3>4*mean(cooksd3), 1:length(cooksd3),""), 
     col="blue", pos = 2)  




###### Model4 #########
#Extra fixed effect added: Cyp metabolizer
Model4 = lmer(Sys_bp ~ Treatment + TADH + (Treatment:TADH) + Gender + Cyp_meta + (1|SubjectNr), 
              data = Data, REML = F)
summary(Model4)
plot(Model4)

# Compare Model 3 with Model2
anova(Model4, Model3) # Model3 has better fit

#Homogeneity of variance check
plot(resid(Model4)) # nicely spread out

# Check normal distribution
qqPlot(resid(Model4)) # more spread out in upper quantile (less concentrated points than expected)
resid(Model4)
shapiro.test(resid(Model4)) # rejecting null hypothesis that residuals come from normal distribution 








####### Model 5  #######
# Model5: left out Cyp metabolizer, included: Occasion (=Occ). 
# This shows which day it is in the study (Occ 1 for first day, etc...)
Model5 = lmer(Sys_bp ~ Treatment + TADH + (Treatment:TADH) + Gender + Occ + (1|SubjectNr), 
              data = Data, REML = F)
summary(Model5)
plot(Model5)

# Compare Model 5 to Model3 (best model so far)
anova(Model3, Model5) # Model5 has better fit

#Homogeneity of variance check
plot(resid(Model5)) # nicely spread out

# Check normal distribution
qqPlot(resid(Model5), id.n = 10) 

# more spread out in upper quantile (less concentrated points than expected)
shapiro.test(resid(Model5)) # rejecting null hypothesis that residuals come from normal distribution 

# Check influence of outliers
infl5 = influence(Model5, obs = T)
cooksd5 = cooks.distance(infl5) # two outliers, 


plot(cooksd5, pch="*", cex=2, main="Influential Obs by Cooks distance")  # still same outliers detected
abline(h = 4*mean(cooksd5, na.rm=T), col="red")  
text(x = 1:length(cooksd5) , y=cooksd5, labels=ifelse(cooksd5>4*mean(cooksd5), 1:length(cooksd5),""), 
     col="blue", pos = 2)  



# Export anova and summary functions to LateX tables
xtable(anova(Model3, Model5))
xtable(coef(summary(Model5))) # fixed effects
xtable(as.data.frame(VarCorr(Model5)))

###### Model 6 - Maximum model #####
Model6 = lmer(Sys_bp ~ Treatment + TADH + (Treatment:TADH) + Gender + Occ + Seq + (1|SubjectNr), 
              data = Data, REML = F)
summary(Model6)
plot(Model6)

# Compare Model 5 and 6
anova(Model5, Model6) # Model5 has better fit


# Export anova table to LateX
xtable(data.frame(anova(Model5, Model6)))


###### Final Model ######
# Model5 seems to fit the data best, for final model use REML = T
Data$Gender = as.factor(Data$Gender)
Data$Occ = as.numeric(as.character(Data$Occ))

Model_final = lmer(Sys_bp ~ Treatment + TADH + (Treatment:TADH) + Gender + Occ + (1|SubjectNr), 
                   data = Data, REML = T)
summary(Model_final)

# Random effect
dotplot(ranef(Model_final, condVar = TRUE)) # subjects 2003, 1010, 1003, 1006 have an effect on the intercept??

xtable(anova(Model1, Model_final))




#----------------
#   EMMEANS
#----------------
# The marginal mean is estimated
# Note that parameter Occ (occasion) has to be recognized as numeric/integer and not a factor 
# (although it is a factor with 2 levels)
# Emmeans can not handle only factor parameters, thus one has to be numeric/integer



# Mean per timepoint
str(Data)
with(Data, tapply(Sys_bp, TADH, mean))



# Construct reference grid
refgrid = ref_grid(Model_final)
df_emmeans = data.frame(summary(refgrid))
refgrid

# Compute Estimated Marginal Means over all timepoints for the different Treatments and gender
data_emmeans = emmeans(refgrid, specs = c('Treatment', "Gender"))
df_summ_emmeans = (summary(data_emmeans))


# Visualize the covariance matrix
plot_contrast = plot(data_emmeans, comparisons = F, alpha = 0.05, intervals = T, 
                     xlab = "Estimated Marginal Means of Systolic Blood Pressure (mmHg)")

# Contrast is calculated between placebo and treatment for both males and females
data_contr = contrast(data_emmeans,by = 'Gender', method = 'pairwise')
df_contrast = (summary(data_contr)) # clear contrast and significant effect is proven







### GGplot set up ###
theme_setup =  theme(axis.text=element_text(size=20),
                     axis.title=element_text(size=22),
                     plot.title = element_text(size = 22),
                     strip.text = element_text(size = 20),
                     legend.position="bottom",
                     legend.text=element_text(size=20),
                     legend.title=element_blank(),     # remove legend title
                     panel.background = element_rect(fill = "lightgrey",     # fill in background
                                                     colour = "white", size = 4))


# Plot the Estimated Marginal Means
pd <- position_dodge(0.1) # position dodge for error bars

# TADH needs to be numeric again for plotting
df_emmeans$TADH = as.numeric(as.character(df_emmeans$TADH))

plot_emmeans = ggplot(data = df_emmeans, aes(x = TADH, y= prediction, col=Treatment))  +
  geom_point(position = pd, aes(shape = Treatment), size = 4) +
  geom_line(position = pd) +
  geom_errorbar(position = pd, aes(ymin = prediction - SE, ymax = prediction + SE, x = TADH, 
                                   col = Treatment), alpha = 1, width = 0.3) +
  #ggtitle("Estimated Marginal Means and Standard Error of the Systolic Blood Pressure over time 
#after administration of Metoprolol of placebo
          #\n (0 = male, 1 = female)") + 
  ylab("Bloodpressure(mmHg)") + 
  xlab("Time after dosing (hours)") +
  ylim(100,140) + xlim(-0.9,6.2)

plot_emmeans = plot_emmeans + facet_wrap(~Gender) + 
  scale_color_manual(values = c('treatment' = 'blue', 'placebo' = 'orange')) + 
  theme(panel.background = element_rect(fill = "lightgrey", colour = "white", size = 4)) + 
  geom_vline(xintercept = 0, linetype = 'dotted') + theme_setup
plot(plot_emmeans)





####### SAVE FILES #######
write.table(df_emmeans, file = paste("../Data/DataForGraphs/CHDR1518_Estimated_Marginal_Means_SysBP", 
            Sys.Date(),".csv", sep = ""), sep = ",", row.names = FALSE, na = "", col.names = T)

write.table(df_summ_emmeans, file = paste("../Data/DataForGraphs/CHDR1518_Summary_Estimated_Marginal_Means_SysBP", 
            Sys.Date(),".csv", sep = ""), sep = ",", row.names = FALSE, na = "", col.names = T)

write.table(df_contrast, file = paste("../Data/DataForGraphs/CHDR1518_Summary_Contrast_Estimated_Marginal_Means_SysBP", 
            Sys.Date(),".csv", sep = ""), sep = ",", row.names = FALSE, na = "", col.names = T)




######## SAVE PLOTS #######
png('../Plots/CHDR1518_Summary_Estimated_Marginal_Means_SysBP.png', width = 15, height = 7, 
    units = 'in', res = 600)
plot(plot_contrast)
dev.off()

png('../Plots/CHDR1518_Estimated_Marginal_Means_SysBP.png', width = 15, height = 7, 
    units = 'in', res = 600)
plot(plot_emmeans)
dev.off()


################################################### END SCRIPT #####################################################################
####################################################################################################################################
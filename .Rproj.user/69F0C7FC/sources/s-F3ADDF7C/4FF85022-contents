---
title: "Initial Analysis NECK-trial data"
author: "Ilse van Beelen & Floor Komen"
date: "2019-11-06"
output: html_document


---

```{r setup, include=FALSE, echo=FALSE}
knitr::opts_chunk$set(echo = FALSE, fig.width=16, fig.height=8, warning = FALSE)

rm(list = ls())
library(haven)
library(tidyverse)
library(gganimate)
library(tidyverse)
library(gridExtra)

data <- read_sav("Data/Dataset NECK HADS stuk 12-08-2019 long.sav")

# Visualization set-up
theme <-  theme(panel.background = element_rect(fill = "lightgrey", colour = "white", size = 4),
              axis.text=element_text(size=15),
              axis.title=element_text(size=22),
              plot.title = element_text(size = 22),
              strip.text = element_text(size = 15))

```





```{r, results='hide'}

#### Cleaning data ####
df_all <- data %>% 
  dplyr::select(PATIENTID, OPERATIE, PMOMENTX, NDI.Som.GOED, HADSDEPR, HADSANGS, Baseline_HADSANG_Group,
         Baseline_HADSDEPR_Group) %>%
  rename(id = PATIENTID, surgery = OPERATIE, time = PMOMENTX, ndi = NDI.Som.GOED,
         hads_depr = HADSDEPR, hads_anx = HADSANGS, baseline_anx = Baseline_HADSANG_Group,
         baseline_depr = Baseline_HADSDEPR_Group) 


# One patients has NAs. Manually replace these
df_all %>%
  filter(id == "L8103004")  


df_all <- df_all %>% 
  mutate(baseline_depr = ifelse(df_all$id == "L8103004" & df_all$time != 0, 1, NA)) %>%
  mutate(baseline_anx = ifelse(df_all$id == "L8103004" & df_all$time != 0, 1, NA))
 
df_all %>%
  filter(id == "L8103004")

# Change to factors and create variables with the label names
df_all$id <- as.factor(df_all$id)
#df_all$di_depr <- as.factor(df_all$di_depr)
df_all$surgery <- as.factor(df_all$surgery)
df_all$baseline_depr <- as.factor(df_all$baseline_depr)
df_all$baseline_anx <- as.factor(df_all$baseline_anx)

df_all$surgery_labels <- df_all$surgery
levels(df_all$surgery_labels) <- c("ACD", "ACDF", "ACDA")

df_all$baseline_depr_labels <- df_all$baseline_depr
levels(df_all$baseline_depr_labels) <- c("non", "doubtful", "cases")

df_all$baseline_anx_labels <- df_all$baseline_anx
levels(df_all$baseline_anx_labels) <- c("non", "doubtful", "cases")



#### Depression/Anxiety after 2 years ####
# 0-7 non-cases, 8-10 doubtful cases and 11-21 cases

df_week104 <- df_all[df_all$time == 104,]
df_week104$week104_depr <- ifelse(df_week104$hads_depr <= 7, 1, 
                              ifelse(df_week104$hads_depr >= 11, 3, 2))
df_week104$week104_anx <- ifelse(df_week104$hads_anx <= 7, 1, 
                                  ifelse(df_week104$hads_anx >= 11, 3, 2))

df_week104 <- df_week104 %>%
  dplyr::select(id, time, hads_depr, hads_anx, week104_depr, week104_anx) %>%
  mutate(week104_depr_labels = recode(week104_depr, "non", "doubtful", "cases")) %>%
  mutate(week104_anx_labels = recode(week104_anx, "non", "doubtful", "cases"))
  

df_long <- left_join(df_all, df_week104, by = c("id",  "time", "hads_anx", "hads_depr"))


df_profiles <- df_long %>%
  dplyr::select(id, time, baseline_depr, baseline_anx, baseline_depr_labels, baseline_anx_labels,
         week104_depr, week104_anx, week104_depr_labels, week104_anx_labels) %>%
  filter(time == 104) %>%
  drop_na() %>%
  mutate(profile_depr = paste(baseline_depr, week104_depr, sep = " -")) %>%
  mutate(profile_anx = paste(baseline_anx, week104_anx, sep = " - ")) %>%
  mutate(profile_depr_labels = paste(baseline_depr_labels, week104_depr_labels, sep = " - ")) %>%
  mutate(profile_anx_labels = paste(baseline_anx_labels, week104_anx_labels, sep = " - ")) %>%
  dplyr::select(id, profile_depr, profile_anx, profile_anx_labels, profile_depr_labels) 


# Copy this dataframe 3 times.
df_profiles2x <- rbind(df_profiles, df_profiles)
df_profiles <- rbind(df_profiles2x, df_profiles)  


df_long <- df_long %>%
  left_join(df_profiles, by = "id") %>%
  distinct() 


# remove nas
df_long_no_na <- df_long %>%
  drop_na(ndi, hads_anx, hads_depr)
  
# check if no patient is removed
setdiff(data$PATIENTID, df_long$id)



# Save new data file
write.table(df_long_no_na, file = "Data/data_final_2019-11-05.csv", sep = ",", row.names = FALSE, 
            na = "", col.names = T)

```



## Data summary

We have 109 patients who are randomly assigned to 3 different surgeries (ACD, ACDF, ACDA). The NDI, HADS depression and HADS anxiety are measured at baseline, 1 year and 2 years after surgery. An earlier analysis of the data showed that the functional recovery measured, NDI, is not significantly different between the three surgeries.


## Data visualization

### NDI over time

Below, the NDI score is visualized for each patient over time. In general, there is a decreasing trend over time. Except for a few subjects where the NDI increases over time.


```{r}

p1 <-  ggplot(data = df_long, aes(x = time, y = ndi, col = id))  +
  geom_point(size = 4, alpha = 0.7) +
  geom_line(aes(group = id), size = 1) +
  ggtitle("Raw data: NDI score over time") + 
  ylab("NDI score") + 
  xlab("Time after surgery (weeks)") + theme(legend.position = "none") + 
  theme 


plot(p1)
# requires packages: gifski, png, gganimate
#renderer <-  gifski_renderer(loop=FALSE) 
#p1 + transition_reveal(along = time) 

#anim_save("example_animation")

```


### Demographics

Histograms of NDI and HADS. The NDI is very skewed to the left. This is again a problem for the statistical analysis, because the response is expected to be roughly normally distributed. It is possible to log transform the NDI, however this makes the interpretation and back transformation very difficult. We choose not to do this.

```{r}

df_long %>%
  select(ndi, hads_depr, hads_anx) %>% 
  gather() %>% 
  ggplot(aes(value)) +
    facet_wrap(~ key, scales = "free") +
    geom_histogram(bins = 30) + theme +
  ggtitle("Histograms")



```

### Simple correlations

The purpose of these graphs is to explore the assocation between HADS and NDI.


Correlation between NDI score and HADS anxiety score at baseline, 52 and 104 weeks

```{r}

ggplot(data = df_long, aes(x = hads_anx, y = ndi)) +
   ggtitle("Correlation between NDI score and HADS anxiety score at baseline, 52 and 104 weeks") +
  geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) + 
  facet_grid(~time) + theme +  
  #geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) + 
  xlab("HADS anxiety score") + ylab("NDI score")

```

Correlation between NDI score and HADS depression score at baseline, 52 and 104 weeks

```{r}

ggplot(data = df_long, aes(x = hads_depr, y = ndi)) +  
  geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) + 
  facet_grid(~time) + theme + 
  ggtitle("Correlation between NDI score and HADS depression score at baseline, 52 and 104 weeks") + 
  #geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_depr", y = "ndi"), parse = TRUE) + 
  xlab("HADS depression score") + ylab("NDI score")

```


Correlation between HADS anxiety and HADS depression score at baseline, 52 and 104 weeks

```{r}

ggplot(data = df_long, aes(x = hads_depr, y = hads_anx)) +  
  geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) + 
  facet_grid(~time) + theme + 
  ggtitle("Correlation between HADS anxiety and HADS depression score at baseline, 52 and 104 week") + 
  #geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_depr", y = "hads_anx"), parse = TRUE) +  
  #geom_text(x = 5, y = 20, label = lm_eqn(df), parse = TRUE) + 
  xlab("HADS depression score") + ylab("HADS anxiety score")

```

Correlation between NDI at baseline and after 1 year. And correlation between NDI at baseline and after 2 years.


```{r}
df_corr <- df_long %>%
  dplyr::select(id, time, ndi) %>%
  #gather(variable, value, -c(ndi:hads_depr)) %>%
  #unite(temp, student, variable) %>%
  #spread(temp, value)
  spread(key = time, value = ndi, sep = "")


p3 <- ggplot(data = df_corr, aes(x = time0 , y = time52)) +  
  geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) + 
  #geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) + 
  xlab("NDI score baseline") + ylab("NDI score 1 years") + theme



p4 <- ggplot(data = df_corr, aes(x = time0 , y = time104)) +  
  geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) + 
  ggtitle("Correlation between NDI at different timepoints") + 
  #geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) + 
  xlab("NDI score baseline") + ylab("NDI score 2 years") + theme

grid.arrange(p3, p4, nrow = 1)

```


## Missing measurements


```{r}

na_count <- sapply(df_long[,c(4:6)], function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
na_count


df_long %>% 
  dplyr::select(id, time, ndi, hads_anx, hads_depr) %>%
  filter_all(any_vars(is.na(.))) %>%
  print(n = Inf)

```




mutate(baseline_depr = ifelse(df_all$id == "L8103004" & df_all$time != 0, 1, NA)) %>%
mutate(baseline_anx = ifelse(df_all$id == "L8103004" & df_all$time != 0, 1, NA))
df_all %>%
filter(id == "L8103004")
# Change to factors and create variables with the label names
df_all$id <- as.factor(df_all$id)
#df_all$di_depr <- as.factor(df_all$di_depr)
df_all$surgery <- as.factor(df_all$surgery)
df_all$baseline_depr <- as.factor(df_all$baseline_depr)
df_all$baseline_anx <- as.factor(df_all$baseline_anx)
df_all$surgery_labels <- df_all$surgery
levels(df_all$surgery_labels) <- c("ACD", "ACDF", "ACDA")
df_all$baseline_depr_labels <- df_all$baseline_depr
levels(df_all$baseline_depr_labels) <- c("non", "doubtful", "cases")
df_all$baseline_anx_labels <- df_all$baseline_anx
levels(df_all$baseline_anx_labels) <- c("non", "doubtful", "cases")
df_week104 <- df_all[df_all$time == 104,]
df_week104$week104_depr <- ifelse(df_week104$hads_depr <= 7, 1,
ifelse(df_week104$hads_depr >= 11, 3, 2))
df_week104$week104_anx <- ifelse(df_week104$hads_anx <= 7, 1,
ifelse(df_week104$hads_anx >= 11, 3, 2))
df_week104 <- df_week104 %>%
select(id, time, hads_depr, hads_anx, week104_depr, week104_anx) %>%
mutate(week104_depr_labels = recode(week104_depr, "non", "doubtful", "cases")) %>%
mutate(week104_anx_labels = recode(week104_anx, "non", "doubtful", "cases"))
df_long <- left_join(df_all, df_week104, by = c("id",  "time", "hads_anx", "hads_depr"))
df_profiles <- df_long %>%
select(id, time, baseline_depr, baseline_anx, baseline_depr_labels, baseline_anx_labels,
week104_depr, week104_anx, week104_depr_labels, week104_anx_labels) %>%
filter(time == 104) %>%
drop_na() %>%
mutate(profile_depr = paste(baseline_depr, week104_depr, sep = " -")) %>%
mutate(profile_anx = paste(baseline_anx, week104_anx, sep = " - ")) %>%
mutate(profile_depr_labels = paste(baseline_depr_labels, week104_depr_labels, sep = " - ")) %>%
mutate(profile_anx_labels = paste(baseline_anx_labels, week104_anx_labels, sep = " - ")) %>%
select(id, profile_depr, profile_anx, profile_anx_labels, profile_depr_labels)
# Copy this dataframe 3 times.
df_profiles2x <- rbind(df_profiles, df_profiles)
df_profiles <- rbind(df_profiles2x, df_profiles)
df_long <- df_long %>%
left_join(df_profiles, by = "id") %>%
distinct()
# remove nas
df_long_no_na <- df_long %>%
drop_na(ndi, hads_anx, hads_depr)
# check if no patient is removed
setdiff(data$PATIENTID, df_long$id)
df_long %>%
select(id, time, ndi, hads_anx, hads_depr) %>%
filter_all(any_vars(is.na(.))) %>%
print(n = Inf)
na_count <- sapply(df_long[,c(4:6)], function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
na_count
getVarCov(model3, individual = 20, type = "conditional")
library(nlme)
getVarCov(model3, individual = 20, type = "conditional")
model3 <- lme4::lmer(ndi ~ time + hads_depr + (1|id), data = df_long, REML = F)
getVarCov(model3, individual = 20, type = "conditional")
model3 <- nlme::lme(ndi ~ time + hads_depr + random = ~1|ID, method= "ML", data = df_long)
model3 <- nlme::lme(ndi ~ time + hads_depr, random = ~1|ID, method= "ML", data = df_long)
model3 <- nlme::lme(ndi ~ time + hads_depr, random = ~1|id, method= "ML", data = df_long)
# Load libraries and read in data
rm(list = ls())
library(ggplot2)
library(lme4)
library(tidyverse)
library(nlme)
df_long <- read.csv("Data/data_final_2019-11-05.csv", sep = ",")
str(df_long)
df_corr <- df_long %>%
select(time, ndi, hads_anx, hads_depr) %>%
gather(variable, value, -c(ndi:hads_depr)) %>%
unite(temp, student, variable) %>%
spread(temp, value)
df_corr <- df_long %>%
select(time, ndi) %>%
#gather(variable, value, -c(ndi:hads_depr)) %>%
#unite(temp, student, variable) %>%
#spread(temp, value)
spread(key = time, value = ndi, sep = "")
df_corr <- df_long %>%
select(id, time, ndi) %>%
#gather(variable, value, -c(ndi:hads_depr)) %>%
#unite(temp, student, variable) %>%
#spread(temp, value)
spread(key = time, value = ndi, sep = "")
ggplot(data = df_corr, aes(x = time0 , y = time104)) +
geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) +
#geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) +
xlab("NDI score baseline") + ylab("NDI score 2 years")
cor(x = df_corr$time0, df_corr$time104, use = "pairwise.complete.obs", method = "pearson")
cor(x = df_corr$time0, df_corr$time52, use = "pairwise.complete.obs", method = "pearson")
cor.test(df_corr$time0, df_corr$time52)
cor.test(df_corr$time0, df_corr$time104)
model3 <- nlme::lme(ndi ~ time + hads_depr, random = ~1|id, method= "ML", data = df_long)
getVarCov(model3, individual = 20, type = "conditional")
getVarCov(model3, individual = 20, type = "random")
getVarCov(model3, individual = 20, type = "conditional")
getVarCov(lmm_max_r1, individual = 20, type = "marginal")
getVarCov(model3, individual = 20, type = "marginal")
getVarCov(model3, individual = 20, type = "conditional")
getVarCov(model3, individual = 20, type = "marginal")
getVarCov(model3, type = "marginal")
View(df_long)
summary(model3)
model3 <- nlme::lme(ndi ~ time + hads_depr, random = ~1|id, method= "ML", data = df_long)
model4 <- lme4::lmer(ndi ~ time + hads_depr  + (1|id), data = df_long, REML = F)
summary(model4)
summary(model3)
df_long %>% mutate(hads_tot = hads_depr + hads_anx)
df_long <- df_long %>%
mutate(hads_tot = hads_depr + hads_anx)
str(df_long)
model1 <- nlme::lme(ndi ~ time, random = ~1|id, method= "ML", data = df_long)
model2 <- nlme::lme(ndi ~ time + hads_tot, random = ~1|id, method= "ML", data = df_long)
plot(resid(model1))
qqPlot(resid(model1))
infl2 = influence(model1, obs = T)
# Homogeneity of variance
plot(resid(model1))
# Normally distributed residuals
qqPlot(resid(model1))
# Influencial points
infl2 = influence(model1, obs = T)
cooksd = cooks.distance(infl2) # two outliers,
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x = 1:length(cooksd) , y=cooksd, labels=ifelse(cooksd>0.04, 1:length(cooksd),""), col="blue", pos =2)
# Homogeneity of variance
plot(resid(model2))
# Normally distributed residuals
qqPlot(resid(model2))
# Influencial points
infl2 = influence(model2, obs = T)
cooksd = cooks.distance(infl2) # two outliers,
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x = 1:length(cooksd) , y=cooksd, labels=ifelse(cooksd>0.04, 1:length(cooksd),""), col="blue", pos =2)
anova(model1, model2)
getVarCov(model2, individual = 20, type = "conditional")
getVarCov(model2, type = "marginal")
197.73 - 131.1
summary(model2)
model1 <- nlme::lme(ndi ~ time, random = ~1|id, method= "ML", data = df_long)
model2 <- nlme::lme(ndi ~ time + hads_tot, random = ~1|id, method= "ML", data = df_long)
anova(model1, model2)
summary(model2)
model2$groups
model2$modelStruct
rr1 <- ranef(model2, condVar = TRUE)
dotplot(rr1, scales = list(x = list(relation = 'free')))
model2 <- nlme::lme(ndi ~ time + hads_tot, random = ~1|id, method= "REML", data = df_long)
summary(model2)
model_final <- nlme::lme(ndi ~ time + hads_tot, random = ~1|id, method= "REML", data = df_long)
summary(model_final)
model_final <- lme4::lmer(ndi ~ time + hads_tot + (1|id), REML= T, data = df_long)
summary(model_final)
sqrt(68)
library(car)
library(emmeans)
library(MASS)
rr1 <- ranef(model2, condVar = TRUE)
dotplot(rr1, scales = list(x = list(relation = 'free')))
library(lmerTest)
install.packages("lmerTest")
library(lmerTest)
rr1 <- ranef(model2, condVar = TRUE)
dotplot(rr1, scales = list(x = list(relation = 'free')))
library(lattice)
dotplot(rr1, scales = list(x = list(relation = 'free')))
model_final <- nlme::lme(ndi ~ time + hads_tot, random = ~1|id, method= "REML", data = df_long)
dotplot(rr1, scales = list(x = list(relation = 'free')))
rr1 <- ranef(model_final, condVar = TRUE)
dotplot(rr1, scales = list(x = list(relation = 'free')))
rr1
hist(rr1)
rr1[1,]
rr1[,1]
hist(rr1[,1])
dotplot(rr1)
rr1 <- ranef(model_final, postVar = TRUE)
dotplot(rr1)
model_final <- nlme::lme(ndi ~ time + hads_tot, random = ~1|id, method= "REML", data = df_long)
#model_final <- lme4::lmer(ndi ~ time + hads_tot + (1|id), REML= T, data = df_long)
summary(model_final)
rr1 <- ranef(model_final, postVar = TRUE)
dotplot(rr1)
rr1
rm(list = ls())
library(haven)
library(tidyverse)
library(gganimate)
data <- read_sav("Data/Dataset NECK HADS stuk 12-08-2019 long.sav")
# Visualization set-up
theme <-  theme(panel.background = element_rect(fill = "lightgrey", colour = "white", size = 4),
axis.text=element_text(size=15),
axis.title=element_text(size=22),
plot.title = element_text(size = 22),
strip.text = element_text(size = 15))
```{r}
#### Cleaning data ####
df_all <- data %>%
select(PATIENTID, OPERATIE, PMOMENTX, NDI.Som.GOED, HADSDEPR, HADSANGS, Baseline_HADSANG_Group,
Baseline_HADSDEPR_Group) %>%
rename(id = PATIENTID, surgery = OPERATIE, time = PMOMENTX, ndi = NDI.Som.GOED,
hads_depr = HADSDEPR, hads_anx = HADSANGS, baseline_anx = Baseline_HADSANG_Group,
baseline_depr = Baseline_HADSDEPR_Group)
# One patients has NAs. Manually replace these
df_all %>%
filter(id == "L8103004")
#### Cleaning data ####
df_all <- data %>%
select(PATIENTID, OPERATIE, PMOMENTX, NDI.Som.GOED, HADSDEPR, HADSANGS, Baseline_HADSANG_Group,
Baseline_HADSDEPR_Group) %>%
rename(id = PATIENTID, surgery = OPERATIE, time = PMOMENTX, ndi = NDI.Som.GOED,
hads_depr = HADSDEPR, hads_anx = HADSANGS, baseline_anx = Baseline_HADSANG_Group,
baseline_depr = Baseline_HADSDEPR_Group)
rm(list = ls())
library(haven)
library(tidyverse)
library(gganimate)
library(tidyverse)
data <- read_sav("Data/Dataset NECK HADS stuk 12-08-2019 long.sav")
# Visualization set-up
theme <-  theme(panel.background = element_rect(fill = "lightgrey", colour = "white", size = 4),
axis.text=element_text(size=15),
axis.title=element_text(size=22),
plot.title = element_text(size = 22),
strip.text = element_text(size = 15))
#### Cleaning data ####
df_all <- data %>%
select(PATIENTID, OPERATIE, PMOMENTX, NDI.Som.GOED, HADSDEPR, HADSANGS, Baseline_HADSANG_Group,
Baseline_HADSDEPR_Group) %>%
rename(id = PATIENTID, surgery = OPERATIE, time = PMOMENTX, ndi = NDI.Som.GOED,
hads_depr = HADSDEPR, hads_anx = HADSANGS, baseline_anx = Baseline_HADSANG_Group,
baseline_depr = Baseline_HADSDEPR_Group)
#### Cleaning data ####
df_all <- data %>%
dplyr::select(PATIENTID, OPERATIE, PMOMENTX, NDI.Som.GOED, HADSDEPR, HADSANGS, Baseline_HADSANG_Group,
Baseline_HADSDEPR_Group) %>%
rename(id = PATIENTID, surgery = OPERATIE, time = PMOMENTX, ndi = NDI.Som.GOED,
hads_depr = HADSDEPR, hads_anx = HADSANGS, baseline_anx = Baseline_HADSANG_Group,
baseline_depr = Baseline_HADSDEPR_Group)
# One patients has NAs. Manually replace these
df_all %>%
filter(id == "L8103004")
df_all <- df_all %>%
mutate(baseline_depr = ifelse(df_all$id == "L8103004" & df_all$time != 0, 1, NA)) %>%
mutate(baseline_anx = ifelse(df_all$id == "L8103004" & df_all$time != 0, 1, NA))
df_all %>%
filter(id == "L8103004")
# Change to factors and create variables with the label names
df_all$id <- as.factor(df_all$id)
#df_all$di_depr <- as.factor(df_all$di_depr)
df_all$surgery <- as.factor(df_all$surgery)
df_all$baseline_depr <- as.factor(df_all$baseline_depr)
df_all$baseline_anx <- as.factor(df_all$baseline_anx)
df_all$surgery_labels <- df_all$surgery
levels(df_all$surgery_labels) <- c("ACD", "ACDF", "ACDA")
df_all$baseline_depr_labels <- df_all$baseline_depr
levels(df_all$baseline_depr_labels) <- c("non", "doubtful", "cases")
df_all$baseline_anx_labels <- df_all$baseline_anx
levels(df_all$baseline_anx_labels) <- c("non", "doubtful", "cases")
df_week104 <- df_all[df_all$time == 104,]
df_week104$week104_depr <- ifelse(df_week104$hads_depr <= 7, 1,
ifelse(df_week104$hads_depr >= 11, 3, 2))
df_week104$week104_anx <- ifelse(df_week104$hads_anx <= 7, 1,
ifelse(df_week104$hads_anx >= 11, 3, 2))
df_week104 <- df_week104 %>%
select(id, time, hads_depr, hads_anx, week104_depr, week104_anx) %>%
mutate(week104_depr_labels = recode(week104_depr, "non", "doubtful", "cases")) %>%
mutate(week104_anx_labels = recode(week104_anx, "non", "doubtful", "cases"))
df_long <- left_join(df_all, df_week104, by = c("id",  "time", "hads_anx", "hads_depr"))
df_profiles <- df_long %>%
select(id, time, baseline_depr, baseline_anx, baseline_depr_labels, baseline_anx_labels,
week104_depr, week104_anx, week104_depr_labels, week104_anx_labels) %>%
filter(time == 104) %>%
drop_na() %>%
mutate(profile_depr = paste(baseline_depr, week104_depr, sep = " -")) %>%
mutate(profile_anx = paste(baseline_anx, week104_anx, sep = " - ")) %>%
mutate(profile_depr_labels = paste(baseline_depr_labels, week104_depr_labels, sep = " - ")) %>%
mutate(profile_anx_labels = paste(baseline_anx_labels, week104_anx_labels, sep = " - ")) %>%
select(id, profile_depr, profile_anx, profile_anx_labels, profile_depr_labels)
# Copy this dataframe 3 times.
df_profiles2x <- rbind(df_profiles, df_profiles)
df_profiles <- rbind(df_profiles2x, df_profiles)
df_long <- df_long %>%
left_join(df_profiles, by = "id") %>%
distinct()
# Copy this dataframe 3 times.
df_profiles2x <- rbind(df_profiles, df_profiles)
df_profiles <- df_long %>%
select(id, time, baseline_depr, baseline_anx, baseline_depr_labels, baseline_anx_labels,
week104_depr, week104_anx, week104_depr_labels, week104_anx_labels) %>%
filter(time == 104) %>%
drop_na() %>%
mutate(profile_depr = paste(baseline_depr, week104_depr, sep = " -")) %>%
mutate(profile_anx = paste(baseline_anx, week104_anx, sep = " - ")) %>%
mutate(profile_depr_labels = paste(baseline_depr_labels, week104_depr_labels, sep = " - ")) %>%
mutate(profile_anx_labels = paste(baseline_anx_labels, week104_anx_labels, sep = " - ")) %>%
select(id, profile_depr, profile_anx, profile_anx_labels, profile_depr_labels)
df_profiles <- df_long %>%
dplyr::select(id, time, baseline_depr, baseline_anx, baseline_depr_labels, baseline_anx_labels,
week104_depr, week104_anx, week104_depr_labels, week104_anx_labels) %>%
filter(time == 104) %>%
drop_na() %>%
mutate(profile_depr = paste(baseline_depr, week104_depr, sep = " -")) %>%
mutate(profile_anx = paste(baseline_anx, week104_anx, sep = " - ")) %>%
mutate(profile_depr_labels = paste(baseline_depr_labels, week104_depr_labels, sep = " - ")) %>%
mutate(profile_anx_labels = paste(baseline_anx_labels, week104_anx_labels, sep = " - ")) %>%
select(id, profile_depr, profile_anx, profile_anx_labels, profile_depr_labels)
# remove nas
df_long_no_na <- df_long %>%
drop_na(ndi, hads_anx, hads_depr)
View(df_long)
#### Cleaning data ####
df_all <- data %>%
dplyr::select(PATIENTID, OPERATIE, PMOMENTX, NDI.Som.GOED, HADSDEPR, HADSANGS, Baseline_HADSANG_Group,
Baseline_HADSDEPR_Group) %>%
rename(id = PATIENTID, surgery = OPERATIE, time = PMOMENTX, ndi = NDI.Som.GOED,
hads_depr = HADSDEPR, hads_anx = HADSANGS, baseline_anx = Baseline_HADSANG_Group,
baseline_depr = Baseline_HADSDEPR_Group)
# One patients has NAs. Manually replace these
df_all %>%
filter(id == "L8103004")
df_all <- df_all %>%
mutate(baseline_depr = ifelse(df_all$id == "L8103004" & df_all$time != 0, 1, NA)) %>%
mutate(baseline_anx = ifelse(df_all$id == "L8103004" & df_all$time != 0, 1, NA))
df_all %>%
filter(id == "L8103004")
# Change to factors and create variables with the label names
df_all$id <- as.factor(df_all$id)
#df_all$di_depr <- as.factor(df_all$di_depr)
df_all$surgery <- as.factor(df_all$surgery)
df_all$baseline_depr <- as.factor(df_all$baseline_depr)
df_all$baseline_anx <- as.factor(df_all$baseline_anx)
df_all$surgery_labels <- df_all$surgery
levels(df_all$surgery_labels) <- c("ACD", "ACDF", "ACDA")
df_all$baseline_depr_labels <- df_all$baseline_depr
levels(df_all$baseline_depr_labels) <- c("non", "doubtful", "cases")
df_all$baseline_anx_labels <- df_all$baseline_anx
levels(df_all$baseline_anx_labels) <- c("non", "doubtful", "cases")
df_week104 <- df_all[df_all$time == 104,]
df_week104$week104_depr <- ifelse(df_week104$hads_depr <= 7, 1,
ifelse(df_week104$hads_depr >= 11, 3, 2))
df_week104$week104_anx <- ifelse(df_week104$hads_anx <= 7, 1,
ifelse(df_week104$hads_anx >= 11, 3, 2))
df_week104 <- df_week104 %>%
select(id, time, hads_depr, hads_anx, week104_depr, week104_anx) %>%
mutate(week104_depr_labels = recode(week104_depr, "non", "doubtful", "cases")) %>%
mutate(week104_anx_labels = recode(week104_anx, "non", "doubtful", "cases"))
View(df_long)
rm(list = ls())
library(haven)
library(tidyverse)
library(gganimate)
library(tidyverse)
data <- read_sav("Data/Dataset NECK HADS stuk 12-08-2019 long.sav")
# Visualization set-up
theme <-  theme(panel.background = element_rect(fill = "lightgrey", colour = "white", size = 4),
axis.text=element_text(size=15),
axis.title=element_text(size=22),
plot.title = element_text(size = 22),
strip.text = element_text(size = 15))
#### Cleaning data ####
df_all <- data %>%
dplyr::select(PATIENTID, OPERATIE, PMOMENTX, NDI.Som.GOED, HADSDEPR, HADSANGS, Baseline_HADSANG_Group,
Baseline_HADSDEPR_Group) %>%
rename(id = PATIENTID, surgery = OPERATIE, time = PMOMENTX, ndi = NDI.Som.GOED,
hads_depr = HADSDEPR, hads_anx = HADSANGS, baseline_anx = Baseline_HADSANG_Group,
baseline_depr = Baseline_HADSDEPR_Group)
# One patients has NAs. Manually replace these
df_all %>%
filter(id == "L8103004")
# One patients has NAs. Manually replace these
df_all %>%
filter(id == "L8103004")
df_all <- df_all %>%
mutate(baseline_depr = ifelse(df_all$id == "L8103004" & df_all$time != 0, 1, NA)) %>%
mutate(baseline_anx = ifelse(df_all$id == "L8103004" & df_all$time != 0, 1, NA))
df_all %>%
filter(id == "L8103004")
# Change to factors and create variables with the label names
df_all$id <- as.factor(df_all$id)
#df_all$di_depr <- as.factor(df_all$di_depr)
df_all$surgery <- as.factor(df_all$surgery)
df_all$baseline_depr <- as.factor(df_all$baseline_depr)
df_all$baseline_anx <- as.factor(df_all$baseline_anx)
df_all$surgery_labels <- df_all$surgery
levels(df_all$surgery_labels) <- c("ACD", "ACDF", "ACDA")
df_all$baseline_depr_labels <- df_all$baseline_depr
levels(df_all$baseline_depr_labels) <- c("non", "doubtful", "cases")
df_all$baseline_anx_labels <- df_all$baseline_anx
levels(df_all$baseline_anx_labels) <- c("non", "doubtful", "cases")
df_week104 <- df_all[df_all$time == 104,]
df_week104$week104_depr <- ifelse(df_week104$hads_depr <= 7, 1,
ifelse(df_week104$hads_depr >= 11, 3, 2))
df_week104$week104_anx <- ifelse(df_week104$hads_anx <= 7, 1,
ifelse(df_week104$hads_anx >= 11, 3, 2))
df_week104 <- df_week104 %>%
select(id, time, hads_depr, hads_anx, week104_depr, week104_anx) %>%
mutate(week104_depr_labels = recode(week104_depr, "non", "doubtful", "cases")) %>%
mutate(week104_anx_labels = recode(week104_anx, "non", "doubtful", "cases"))
View(df_all)
df_week104 <- df_week104 %>%
dplyr::select(id, time, hads_depr, hads_anx, week104_depr, week104_anx) %>%
mutate(week104_depr_labels = recode(week104_depr, "non", "doubtful", "cases")) %>%
mutate(week104_anx_labels = recode(week104_anx, "non", "doubtful", "cases"))
df_long <- left_join(df_all, df_week104, by = c("id",  "time", "hads_anx", "hads_depr"))
df_profiles <- df_long %>%
dplyr::select(id, time, baseline_depr, baseline_anx, baseline_depr_labels, baseline_anx_labels,
week104_depr, week104_anx, week104_depr_labels, week104_anx_labels) %>%
filter(time == 104) %>%
drop_na() %>%
mutate(profile_depr = paste(baseline_depr, week104_depr, sep = " -")) %>%
mutate(profile_anx = paste(baseline_anx, week104_anx, sep = " - ")) %>%
mutate(profile_depr_labels = paste(baseline_depr_labels, week104_depr_labels, sep = " - ")) %>%
mutate(profile_anx_labels = paste(baseline_anx_labels, week104_anx_labels, sep = " - ")) %>%
select(id, profile_depr, profile_anx, profile_anx_labels, profile_depr_labels)
# Copy this dataframe 3 times.
df_profiles2x <- rbind(df_profiles, df_profiles)
df_profiles <- rbind(df_profiles2x, df_profiles)
df_profiles <- df_long %>%
dplyr::select(id, time, baseline_depr, baseline_anx, baseline_depr_labels, baseline_anx_labels,
week104_depr, week104_anx, week104_depr_labels, week104_anx_labels) %>%
filter(time == 104) %>%
drop_na() %>%
mutate(profile_depr = paste(baseline_depr, week104_depr, sep = " -")) %>%
mutate(profile_anx = paste(baseline_anx, week104_anx, sep = " - ")) %>%
mutate(profile_depr_labels = paste(baseline_depr_labels, week104_depr_labels, sep = " - ")) %>%
mutate(profile_anx_labels = paste(baseline_anx_labels, week104_anx_labels, sep = " - ")) %>%
dplyr::select(id, profile_depr, profile_anx, profile_anx_labels, profile_depr_labels)
# Copy this dataframe 3 times.
df_profiles2x <- rbind(df_profiles, df_profiles)
df_profiles <- rbind(df_profiles2x, df_profiles)
df_long <- df_long %>%
left_join(df_profiles, by = "id") %>%
distinct()
# remove nas
df_long_no_na <- df_long %>%
drop_na(ndi, hads_anx, hads_depr)
# check if no patient is removed
setdiff(data$PATIENTID, df_long$id)
# Save new data file
write.table(df_long_no_na, file = "Data/data_final_2019-11-05.csv", sep = ",", row.names = FALSE,
na = "", col.names = T)
na_count <- sapply(df_long[,c(4:6)], function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
na_count
df_long %>%
select(id, time, ndi, hads_anx, hads_depr) %>%
filter_all(any_vars(is.na(.))) %>%
print(n = Inf)
df_long %>%
dplyr::select(id, time, ndi, hads_anx, hads_depr) %>%
filter_all(any_vars(is.na(.))) %>%
print(n = Inf)
p1 <-  ggplot(data = df_long, aes(x = time, y = ndi, col = id))  +
geom_point(size = 4, alpha = 0.7) +
geom_line(aes(group = id), size = 1) +
ggtitle("Raw data: NDI score over time") +
ylab("NDI score") +
xlab("Time after surgery (weeks)") + theme(legend.position = "none") +
theme
plot(p1)
df_corr <- df_long %>%
select(id, time, ndi) %>%
#gather(variable, value, -c(ndi:hads_depr)) %>%
#unite(temp, student, variable) %>%
#spread(temp, value)
spread(key = time, value = ndi, sep = "")
df_corr <- df_long %>%
dplyr::select(id, time, ndi) %>%
#gather(variable, value, -c(ndi:hads_depr)) %>%
#unite(temp, student, variable) %>%
#spread(temp, value)
spread(key = time, value = ndi, sep = "")
ggplot(data = df_corr, aes(x = time0 , y = time104)) +
geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) +
#geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) +
xlab("NDI score baseline") + ylab("NDI score 2 years")
ggplot(data = df_corr, aes(x = time0 , y = time52)) +
geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) +
#geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) +
xlab("NDI score baseline") + ylab("NDI score 1 years")
ggplot(data = df_corr, aes(x = time0 , y = time104)) +
geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) +
#geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) +
xlab("NDI score baseline") + ylab("NDI score 2 years")
p3 <- ggplot(data = df_corr, aes(x = time0 , y = time52)) +
geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) +
#geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) +
xlab("NDI score baseline") + ylab("NDI score 1 years")
p4 <- ggplot(data = df_corr, aes(x = time0 , y = time104)) +
geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) +
#geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) +
xlab("NDI score baseline") + ylab("NDI score 2 years")
grid.arrange(p3, p4, nrow = 1)
ggplot2::grid.arrange(p3, p4, nrow = 1)
install.packages("gridExtra")
library(gridExtra)
p3 <- ggplot(data = df_corr, aes(x = time0 , y = time52)) +
geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) +
#geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) +
xlab("NDI score baseline") + ylab("NDI score 1 years")
p4 <- ggplot(data = df_corr, aes(x = time0 , y = time104)) +
geom_point(size = 4) + geom_smooth(method=lm, se = F, size = 1.5) +
#geom_text(x = 5, y = 80, label = lm_eqn(df_long, x = "hads_anx", y = "ndi"), parse = TRUE) +
xlab("NDI score baseline") + ylab("NDI score 2 years")
ggplot2::grid.arrange(p3, p4, nrow = 1)
grid.arrange(p3, p4, nrow = 1)

plot.title = element_text(size = 22),
strip.text = element_text(size = 15),
legend.title = element_blank())
df_prediction <- read.csv("Data/data_final_prediction_2019-11-05.csv", sep = ",")
df_prediction$time_fct <- as.factor(df_prediction$time_fct)
str(df_prediction)
# Center predictors
df_prediction$ndi0_cnt <- df_prediction$ndi0 - mean(df_prediction$ndi0)
# Center predictors
df_prediction$ndi0_cnt <- df_prediction$ndi0 - mean(df_prediction$ndi0)
df_prediction$hads0_tot <- df_prediction$hads0_tot - mean(df_prediction$hads0_tot)
df_prediction <- read.csv("Data/data_final_prediction_2019-11-05.csv", sep = ",")
df_prediction$time_fct <- as.factor(df_prediction$time_fct)
str(df_prediction)
# Center predictors
df_prediction$ndi0_cnt <- df_prediction$ndi0 - mean(df_prediction$ndi0)
df_prediction$hads0_tot_cnt <- df_prediction$hads0_tot - mean(df_prediction$hads0_tot)
model_ml_cnt <- nlme::lme(ndi1_2 ~ ndi0_cnt + time_fct + hads0_tot_cnt, method = "ML",
random = ~1|id, data = df_prediction)
summary(model_ml_cnt)
summary(model_ml)
model_ml <- nlme::lme(ndi1_2 ~ ndi0 + time_fct + hads0_tot, method = "ML",
random = ~1|id, data = df_prediction)
summary(model_ml)
model_ml_cnt <- nlme::lme(ndi1_2 ~ ndi0_cnt + time_fct + hads0_tot_cnt, method = "ML",
random = ~1|id, data = df_prediction)
summary(model_ml_cnt)
df_prediction$time_fct_cnt <- df_prediction$time_fct = mean(df_prediction$time_fct)
df_prediction$time_fct_cnt <- df_prediction$time_fct - mean(df_prediction$time_fct)
model_ml_cnt <- nlme::lme(ndi1_2 ~ ndi0_cnt + time_fct + hads0_tot_cnt, method = "ML",
random = ~1|id, data = df_prediction)
summary(model_ml_cnt)
View(df_prediction)
df_prediction <- read.csv("Data/data_final_prediction_2019-11-05.csv", sep = ",")
df_prediction$time_fct <- as.factor(df_prediction$time_fct)
str(df_prediction)
# Center predictors
df_prediction$ndi0_cnt <- df_prediction$ndi0 - mean(df_prediction$ndi0)
df_prediction$hads0_tot_cnt <- df_prediction$hads0_tot - mean(df_prediction$hads0_tot)
model_ml_cnt <- nlme::lme(ndi1_2 ~ ndi0_cnt + time_fct + hads0_tot_cnt, method = "ML",
random = ~1|id, data = df_prediction)
summary(model_ml_cnt)
model_final2 <- nlme::lme(ndi1_2 ~ ndi0 + hads0_tot + time_fct, method = "REML",
random = ~1+time_fct|id, data = df_prediction)
summary(model_final2)
anova(model_final, model_final2)
model_final <- nlme::lme(ndi1_2 ~ ndi0 + hads0_tot + time_fct, method = "REML",
random = ~1|id, data = df_prediction)
summary(model_final)
model_final2 <- nlme::lme(ndi1_2 ~ ndi0 + hads0_tot + time_fct, method = "REML",
random = ~1+time_fct|id, data = df_prediction)
summary(model_final2)
anova(model_final, model_final2)
model_ml2 <- nlme::lme(ndi1_2 ~ ndi0 + time_fct + hads0_tot + time_fct:hads0_tot, method = "ML",
random = ~1|id, data = df_prediction)
anova(model_ml, model_ml2)
# Load libraries
rm(list = ls())
set.seed(19950306)
library(ggplot2)
library(lme4)
library(tidyverse)
library(nlme)
library(emmeans)
library(car)
library(lattice)
library(merTools)
library(xtable)
# Set layout for all figures
theme <- theme(panel.background = element_blank(),
panel.grid.major = element_line(colour = "darkgrey", size=0.5),
panel.grid.minor = element_line(colour = "grey",
size=.25,
linetype = "dashed"),
panel.border = element_blank(),
axis.line.x = element_line(colour = "black",
size=0.5,
lineend = "butt"),
axis.line.y = element_line(colour = "black",
size=0.5),
axis.text=element_text(size=15),
axis.title=element_text(size=22),
plot.title = element_text(size = 22),
strip.text = element_text(size = 15),
legend.title = element_blank())
df_prediction <- read.csv("Data/data_final_prediction_2019-11-05.csv", sep = ",")
df_prediction$time_fct <- as.factor(df_prediction$time_fct)
str(df_prediction)
# Center predictors
df_prediction$ndi0_cnt <- df_prediction$ndi0 - mean(df_prediction$ndi0)
df_prediction$hads0_tot_cnt <- df_prediction$hads0_tot - mean(df_prediction$hads0_tot)
model_ml_cnt <- nlme::lme(ndi1_2 ~ ndi0_cnt + time_fct + hads0_tot_cnt, method = "ML",
random = ~1|id, data = df_prediction)
summary(model_ml_cnt)
model_final <- nlme::lme(ndi1_2 ~ ndi0_cnt + hads0_tot_cnt + time_fct, method = "REML",
random = ~1|id, data = df_prediction)
summary(model_final)
# Make prediction for subject L8141003
validation1 <- df_prediction[df_prediction$id == "L8141003",]
training1 <- df_prediction[df_prediction$id != "L8141003", ]
# Make prediction for subject L8105004
validation1 <- df_prediction[df_prediction$id == "L8105004",]
training1 <- df_prediction[df_prediction$id != "L8105004", ]
training.fit <-  lmer(ndi1_2 ~ ndi0 + hads0_tot_cnt + time_fct + (1|id), REML = T,
data = training1)
preds1 <- predictInterval(training.fit, newdata = validation1, n.sims = 999)
validation1 <- cbind(validation1, preds1)
# Make prediction for subject L8061024
validation2 <- df_prediction[df_prediction$id == "L8061024",]
training2 <- df_prediction[df_prediction$id != "L8061024",]
training.fit <-  lmer(ndi1_2 ~ ndi0 + hads0_tot + time_fct + (1|id), REML = T,
data = training2)
preds2 <- predictInterval(training.fit, newdata = validation2, n.sims = 999)
validation2 <- cbind(validation2, preds2)
# Combine predictions in one dataframe and plot the results
predict_2id <- rbind(validation1, validation2)
predict_2id$time <- as.numeric(as.character(predict_2id$time_fct))
predict_2id <- predict_2id %>%
#add_row(id = "L8141003", ndi1_2 = 44, fit = 44, time = 0, upr = 44, lwr = 44, .before = 1) %>%
add_row(id = "L8105004", ndi1_2 = 44, fit = 44, time = 0, upr = 44, lwr = 44, .before = 1) %>%
add_row(id = "L8061024", ndi1_2 = 42, fit = 42, time = 0, upr = 42, lwr = 42, .before =  4)
ppredict <- ggplot(data = predict_2id, aes(x = time, y = ndi1_2)) +
geom_line(size = 1.5, col = "black") +
geom_point(size = 3, col = "black") +
geom_line(aes(x = time, y = fit, col = id), size = 1.5) +
geom_point(aes(x = time, y = fit, col = id), size = 3, shape = 17) +
geom_ribbon(aes(ymin= lwr, ymax= upr, col = id, fill = id), alpha=0.3) + theme +
ylab("NDI") + xlab("Time (weeks)") +  facet_grid(~id) + theme(legend.position = "none")
plot(ppredict)
View(df_prediction)
# Make predictions for L8043008
validation3 <- df_prediction[df_prediction$id == "L8043008",]
training3 <- df_prediction[df_prediction$id != "L8043008",]
training.fit <-  lmer(ndi1_2 ~ ndi0 + hads0_tot + time_fct + (1|id), REML = T,
data = training3)
preds3 <- predictInterval(training.fit, newdata = validation3, n.sims = 999)
validation3 <- cbind(validation3, preds3)
# Combine predictions in one dataframe and plot the results
predict_3id <- rbind(validation1, validation2, validation3)
validation3
predict_3id
predict_2id$time <- as.numeric(as.character(predict_2id$time_fct))
predict_3id$time <- as.numeric(as.character(predict_3id$time_fct))
predict_3id <- predict_3id %>%
#add_row(id = "L8141003", ndi1_2 = 44, fit = 44, time = 0, upr = 44, lwr = 44, .before = 1) %>%
add_row(id = "L8105004", ndi1_2 = 44, fit = 44, time = 0, upr = 44, lwr = 44, .before = 1) %>%
add_row(id = "L8061024", ndi1_2 = 42, fit = 42, time = 0, upr = 42, lwr = 42, .before =  4) %>%
add_row(id = "L8043008", ndi1_2 = 36, fit = 36, time = 0, upr = 36, lwr = 36, .before =  7)
ppredict <- ggplot(data = predict_3id, aes(x = time, y = ndi1_2)) +
geom_line(size = 1.5, col = "black") +
geom_point(size = 3, col = "black") +
geom_line(aes(x = time, y = fit, col = id), size = 1.5) +
geom_point(aes(x = time, y = fit, col = id), size = 3, shape = 17) +
geom_ribbon(aes(ymin= lwr, ymax= upr, col = id, fill = id), alpha=0.3) + theme +
ylab("NDI") + xlab("Time (weeks)") +  facet_grid(~id) + theme(legend.position = "none")
plot(ppredict)
ppredict <- ggplot(data = predict_3id, aes(x = time, y = ndi1_2)) +
geom_line(size = 1.5, col = "black") +
geom_point(size = 3, col = "black") +
geom_line(aes(x = time, y = fit, col = id), size = 1.5) +
geom_point(aes(x = time, y = fit, col = id), size = 3, shape = 17) +
geom_ribbon(aes(ymin= lwr, ymax= upr, col = id, fill = id), alpha=0.3) + theme +
ylab("NDI") + xlab("Time (weeks)") +  facet_grid(~id) + theme(legend.position = "left")
plot(ppredict)
ppredict <- ggplot(data = predict_3id, aes(x = time, y = ndi1_2)) +
geom_line(size = 1.5, col = "black") +
geom_point(size = 3, col = "black") +
geom_line(aes(x = time, y = fit, col = id), size = 1.5) +
geom_point(aes(x = time, y = fit, col = id), size = 3, shape = 17) +
geom_ribbon(aes(ymin= lwr, ymax= upr, col = id, fill = id), alpha=0.3) + theme +
ylab("NDI") + xlab("Time (weeks)") +  facet_grid(~id) + theme(legend.position = "none")
plot(ppredict)
# Make predictions for L8061013
validation4 <- df_prediction[df_prediction$id == "L8061013",]
training4 <- df_prediction[df_prediction$id != "L8061013",]
training.fit <-  lmer(ndi1_2 ~ ndi0 + hads0_tot + time_fct + (1|id), REML = T,
data = training4)
preds4 <- predictInterval(training.fit, newdata = validation4, n.sims = 999)
validation4 <- cbind(validation4, preds4)
# Combine predictions in one dataframe and plot the results
predict_4id <- rbind(validation1, validation2, validation3, validation4)
predict_4id
predict_4id <- predict_4id %>%
#add_row(id = "L8141003", ndi1_2 = 44, fit = 44, time = 0, upr = 44, lwr = 44, .before = 1) %>%
add_row(id = "L8105004", ndi1_2 = 44, fit = 44, time = 0, upr = 44, lwr = 44, .before = 1) %>%
add_row(id = "L8061024", ndi1_2 = 42, fit = 42, time = 0, upr = 42, lwr = 42, .before =  4) %>%
add_row(id = "L8043008", ndi1_2 = 36, fit = 36, time = 0, upr = 36, lwr = 36, .before =  7) %>%
add_row(id = "L8061013", ndi1_2 = 18, fit = 18, time = 0, upr = 18, lwr = 18, .before =  10)
predict_4id$time <- as.numeric(as.character(predict_4id$time_fct))
predict_4id <- predict_4id %>%
#add_row(id = "L8141003", ndi1_2 = 44, fit = 44, time = 0, upr = 44, lwr = 44, .before = 1) %>%
add_row(id = "L8105004", ndi1_2 = 44, fit = 44, time = 0, upr = 44, lwr = 44, .before = 1) %>%
add_row(id = "L8061024", ndi1_2 = 42, fit = 42, time = 0, upr = 42, lwr = 42, .before =  4) %>%
add_row(id = "L8043008", ndi1_2 = 36, fit = 36, time = 0, upr = 36, lwr = 36, .before =  7) %>%
add_row(id = "L8061013", ndi1_2 = 18, fit = 18, time = 0, upr = 18, lwr = 18, .before =  10)
ppredict <- ggplot(data = predict_4id, aes(x = time, y = ndi1_2)) +
geom_line(size = 1.5, col = "black") +
geom_point(size = 3, col = "black") +
geom_line(aes(x = time, y = fit, col = id), size = 1.5) +
geom_point(aes(x = time, y = fit, col = id), size = 3, shape = 17) +
geom_ribbon(aes(ymin= lwr, ymax= upr, col = id, fill = id), alpha=0.3) + theme +
ylab("NDI") + xlab("Time (weeks)") +  facet_grid(~id) + theme(legend.position = "none")
plot(ppredict)
png("Figures/Predicted_ids.png",width = 15, height = 7, units='in',res=300)
plot(ppredict)
dev.off()
rm(list = ls())
#library(ggplot2)
library(tidyverse)
library(gridExtra)
df_long <- read.csv("Data/data_final_2019-11-05.csv", sep = ",")
df_long$time_fct <- as.factor(df_long$time_fct)
str(df_long)
# Set layout for all figures
theme <- theme(panel.background = element_blank(),
panel.grid.major = element_line(colour = "darkgrey", size=0.5),
panel.grid.minor = element_line(colour = "grey",
size=.25,
linetype = "dashed"),
panel.border = element_blank(),
axis.line.x = element_line(colour = "black",
size=0.5,
lineend = "butt"),
axis.line.y = element_line(colour = "black",
size=0.5),
axis.text=element_text(size=15),
axis.title=element_text(size=22),
plot.title = element_text(size = 22),
strip.text = element_text(size = 15),
legend.title = element_blank())
# Load ggCaterpillar, used to plot the random intercept
set.seed(19950306)
rm(list = ls())
library(ggplot2)
library(lme4)
library(tidyverse)
library(nlme)
library(emmeans)
library(car)
library(lattice)
library(xtable)
library(gridExtra)
ggCaterpillar <- function(re, QQ=TRUE, likeDotplot=TRUE) {
require(ggplot2)
f <- function(x) {
pv   <- attr(x, "postVar")
cols <- 1:(dim(pv)[1])
se   <- unlist(lapply(cols, function(i) sqrt(pv[i, i, ])))
ord  <- unlist(lapply(x, order)) + rep((0:(ncol(x) - 1)) * nrow(x), each=nrow(x))
pDf  <- data.frame(y=unlist(x)[ord],
ci=1.96*se[ord],
nQQ=rep(qnorm(ppoints(nrow(x))), ncol(x)),
ID=factor(rep(rownames(x), ncol(x))[ord], levels=rownames(x)[ord]),
ind=gl(ncol(x), nrow(x), labels=names(x)))
if(QQ) {  ## normal QQ-plot
p <- ggplot(pDf, aes(nQQ, y))
p <- p + facet_wrap(~ ind, scales="free")
p <- p + xlab("Standard normal quantiles") + ylab("Random effect quantiles")
} else {  ## caterpillar dotplot
p <- ggplot(pDf, aes(ID, y)) + coord_flip()
if(likeDotplot) {  ## imitate dotplot() -> same scales for random effects
p <- p + facet_wrap(~ ind)
} else {           ## different scales for random effects
p <- p + facet_grid(ind ~ ., scales="free_y")
}
p <- p + xlab("Levels") + ylab("Random effects")
}
p <- p + theme(legend.position="none")
p <- p + geom_hline(yintercept=0)
p <- p + geom_errorbar(aes(ymin=y-ci, ymax=y+ci), width=0, colour="black")
p <- p + geom_point(aes(size=1.2), colour="blue")
return(p)
}
lapply(re, f)
}
# Set layout for all figures
theme <- theme(panel.background = element_blank(),
panel.grid.major = element_line(colour = "darkgrey", size=0.5),
panel.grid.minor = element_line(colour = "grey",
size=.25,
linetype = "dashed"),
panel.border = element_blank(),
axis.line.x = element_line(colour = "black",
size=0.5,
lineend = "butt"),
axis.line.y = element_line(colour = "black",
size=0.5),
axis.text=element_text(size=15),
axis.title=element_text(size=22),
plot.title = element_text(size = 22),
strip.text = element_text(size = 15),
legend.title = element_blank())
df_long <- read.csv("Data/data_final_2019-11-05.csv", sep = ",")
df_long$time_fct <- as.factor(df_long$time_fct)
str(df_long)
#model_final <- nlme::lme(ndi ~ time + hads_tot, random = ~1|id, method= "REML", data = df_long)
model_final <- nlme::lme(ndi ~ time_fct + hads_tot, method = "REML",
random = ~1|id, data = df_long)
summary(model_final)
refgrid <-  ref_grid(model_final)
refgrid
df_emmeans <-  data.frame(summary(refgrid))
df_emmeans$time <- as.numeric(as.character(df_emmeans$time_fct))
df_emmeans$lwr <- df_emmeans$prediction - 1.96*df_emmeans$SE
df_emmeans$upr <- df_emmeans$prediction + 1.96*df_emmeans$SE
p3 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) + geom_point() +
geom_line(col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
theme(legend.position = "none") +
ylab("NDI")  + ylim(c(0,50)) +
xlab("Time (weeks)") + theme
plot(p3)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) + geom_point() +
geom_line(col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
geom_point(size = 4, alpha = 0.5, data = df_long) +
geom_line(aes(group = id), alpha = 0.5, size = 1, data = df_long) +
theme(legend.position = "none") +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) + geom_point() +
geom_line(col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3)
plot(p4)
p4 <- ggplot() +
geom_line(data = df_emmeans, aes(x=time, y = prediction), col = "blue", size = 2) +
geom_point(data = df_emmeans, aes(x = time, y = prediction), col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3)
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_line( col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
geom_point(aes(x=time, y = ndi), size = 4, alpha = 0.5, data = df_long) +
#geom_line(aes(group = id), alpha = 0.5, size = 1, data = df_long) +
theme(legend.position = "none") +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_line( col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
geom_point(aes(x=time, y = ndi), size = 4, alpha = 0.5, col = id, data = df_long) +
#geom_line(aes(group = id), alpha = 0.5, size = 1, data = df_long) +
theme(legend.position = "none") +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_line( col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
geom_point(aes(x=time, y = ndi, col = id), size = 4, alpha = 0.5, data = df_long) +
#geom_line(aes(group = id), alpha = 0.5, size = 1, data = df_long) +
theme(legend.position = "none") +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_line( col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
geom_point(aes(x=time, y = ndi, col = id), size = 4, alpha = 0.5, data = df_long) +
geom_line(aes(x=time, y =ndi, group = id), alpha = 0.5, size = 1, data = df_long) +
theme(legend.position = "none") +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_line( col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
geom_point(aes(x=time, y = ndi, col = id), size = 4, alpha = 0.5, data = df_long) +
geom_line(aes(x=time, y =ndi, group = id, col = id), alpha = 0.5, size = 1, data = df_long) +
theme(legend.position = "none") +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_point(aes(x=time, y = ndi, col = id), size = 4, alpha = 0.3, data = df_long) +
geom_line(aes(x=time, y =ndi, group = id, col = id), alpha = 0.3, size = 1, data = df_long) +
theme(legend.position = "none") +
geom_line( col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_point(aes(x=time, y = ndi, col = id), size = 4, alpha = 0.3, data = df_long) +
geom_line(aes(x=time, y =ndi, group = id, col = id), alpha = 0.3, size = 1, data = df_long) +
theme(legend.position = "none") +
geom_line( col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.7) +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_point(aes(x=time, y = ndi, col = id), size = 4, alpha = 0.3, data = df_long) +
geom_line(aes(x=time, y =ndi, group = id, col = id), alpha = 0.3, size = 1, data = df_long) +
theme(legend.position = "none") +
geom_line( col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.9) +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_point(aes(x=time, y = ndi, col = id), size = 4, alpha = 0.3, data = df_long) +
geom_line(aes(x=time, y =ndi, group = id, col = id), alpha = 0.3, size = 1, data = df_long) +
theme(legend.position = "none") +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.9) +
geom_line( col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_point(aes(x=time, y = ndi, col = id), size = 4, alpha = 0.3, data = df_long) +
geom_line(aes(x=time, y =ndi, group = id, col = id), alpha = 0.3, size = 1, data = df_long) +
theme(legend.position = "none") +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.7) +
geom_line( col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_point(aes(x=time, y = ndi, col = id), size = 4, alpha = 0.3, data = df_long) +
geom_line(aes(x=time, y =ndi, group = id, col = id), alpha = 0.3, size = 1, data = df_long) +
theme(legend.position = "none") +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.7) +
geom_line( col = "blue", size = 3) +
geom_point(col = "blue", size = 5) +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
# Plot only marginal mean
p3 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) + geom_point() +
geom_line(col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
theme(legend.position = "none") +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p3)
# Plot only marginal mean
p3 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) + geom_point() +
geom_line(col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
theme(legend.position = "none") +
ylab("NDI")  + ylim(c(0,40)) +
xlab("Time (weeks)") + theme
plot(p3)
# Plot only marginal mean
p3 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) + geom_point() +
geom_line(col = "blue", size = 2) +
geom_point(col = "blue", size = 4) +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.3) +
theme(legend.position = "none") +
ylab("NDI")  + ylim(c(0,50)) +
xlab("Time (weeks)") + theme
plot(p3)
# Plot marginal + raw data
p4 <- ggplot(data = df_emmeans, aes(x = time, y = prediction )) +
geom_point(aes(x=time, y = ndi, col = id), size = 4, alpha = 0.3, data = df_long) +
geom_line(aes(x=time, y =ndi, group = id, col = id), alpha = 0.3, size = 1, data = df_long) +
theme(legend.position = "none") +
geom_ribbon(data=df_emmeans, aes(ymin= lwr, ymax= upr), alpha=0.7) +
geom_line( col = "blue", size = 3) +
geom_point(col = "blue", size = 5) +
ylab("NDI")  + ylim(c(0,100)) +
xlab("Time (weeks)") + theme
plot(p4)
png("Figures/Marginal_NDI.png",width = 15, height = 7, units='in',res=300)
plot(p3)
dev.off()
png("Figures/Marginal&Raw_NDI.png",width = 15, height = 7, units='in',res=300)
plot(p4)
dev.off()
#model_final <- nlme::lme(ndi ~ time + hads_tot, random = ~1|id, method= "REML", data = df_long)
model_final <- nlme::lme(ndi ~ time_fct + hads_tot, method = "REML",
random = ~1|id, data = df_long)
summary(model_final)
final_mod_summ <- coef(summary(model_final))
xtable(final_mod_summ)
#model_final <- nlme::lme(ndi ~ time + hads_tot, random = ~1|id, method= "REML", data = df_long)
df_long$hads_tot_cnt <- df_long$hads_tot - mean(df_long$hads_tot)
model_final <- nlme::lme(ndi ~ time_fct + hads_tot_cnt, method = "REML",
random = ~1|id, data = df_long)
summary(model_final)
final_mod_summ <- coef(summary(model_final))
xtable(final_mod_summ)
